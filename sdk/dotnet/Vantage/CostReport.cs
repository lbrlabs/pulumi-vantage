// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Vantage
{
    /// <summary>
    /// Manages a CostReport.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Vantage = Lbrlabs.PulumiPackage.Vantage;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var demoReport = new Vantage.CostReport("demoReport", new()
    ///     {
    ///         Filter = "costs.provider = 'aws'",
    ///         FolderToken = "fldr_3555785cd0409118",
    ///         SavedFilterTokens = new[]
    ///         {
    ///             "svd_fltr_e844a2ccace05933",
    ///             "svd_fltr_1b4b80a380ef4ba2",
    ///         },
    ///         Title = "Demo Report",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [VantageResourceType("vantage:index/costReport:CostReport")]
    public partial class CostReport : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Filter query to apply to the Cost Report
        /// </summary>
        [Output("filter")]
        public Output<string?> Filter { get; private set; } = null!;

        /// <summary>
        /// Token of the folder this report resides in.
        /// </summary>
        [Output("folderToken")]
        public Output<string> FolderToken { get; private set; } = null!;

        /// <summary>
        /// Saved filter tokens to be applied to the report.
        /// </summary>
        [Output("savedFilterTokens")]
        public Output<ImmutableArray<string>> SavedFilterTokens { get; private set; } = null!;

        /// <summary>
        /// Title of the Cost Report
        /// </summary>
        [Output("title")]
        public Output<string> Title { get; private set; } = null!;

        /// <summary>
        /// Unique cost report identifier
        /// </summary>
        [Output("token")]
        public Output<string> Token { get; private set; } = null!;

        /// <summary>
        /// Workspace token to add the cost report to.
        /// </summary>
        [Output("workspaceToken")]
        public Output<string> WorkspaceToken { get; private set; } = null!;


        /// <summary>
        /// Create a CostReport resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CostReport(string name, CostReportArgs args, CustomResourceOptions? options = null)
            : base("vantage:index/costReport:CostReport", name, args ?? new CostReportArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CostReport(string name, Input<string> id, CostReportState? state = null, CustomResourceOptions? options = null)
            : base("vantage:index/costReport:CostReport", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/lbrlabs",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CostReport resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CostReport Get(string name, Input<string> id, CostReportState? state = null, CustomResourceOptions? options = null)
        {
            return new CostReport(name, id, state, options);
        }
    }

    public sealed class CostReportArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Filter query to apply to the Cost Report
        /// </summary>
        [Input("filter")]
        public Input<string>? Filter { get; set; }

        /// <summary>
        /// Token of the folder this report resides in.
        /// </summary>
        [Input("folderToken")]
        public Input<string>? FolderToken { get; set; }

        [Input("savedFilterTokens")]
        private InputList<string>? _savedFilterTokens;

        /// <summary>
        /// Saved filter tokens to be applied to the report.
        /// </summary>
        public InputList<string> SavedFilterTokens
        {
            get => _savedFilterTokens ?? (_savedFilterTokens = new InputList<string>());
            set => _savedFilterTokens = value;
        }

        /// <summary>
        /// Title of the Cost Report
        /// </summary>
        [Input("title", required: true)]
        public Input<string> Title { get; set; } = null!;

        /// <summary>
        /// Workspace token to add the cost report to.
        /// </summary>
        [Input("workspaceToken")]
        public Input<string>? WorkspaceToken { get; set; }

        public CostReportArgs()
        {
        }
        public static new CostReportArgs Empty => new CostReportArgs();
    }

    public sealed class CostReportState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Filter query to apply to the Cost Report
        /// </summary>
        [Input("filter")]
        public Input<string>? Filter { get; set; }

        /// <summary>
        /// Token of the folder this report resides in.
        /// </summary>
        [Input("folderToken")]
        public Input<string>? FolderToken { get; set; }

        [Input("savedFilterTokens")]
        private InputList<string>? _savedFilterTokens;

        /// <summary>
        /// Saved filter tokens to be applied to the report.
        /// </summary>
        public InputList<string> SavedFilterTokens
        {
            get => _savedFilterTokens ?? (_savedFilterTokens = new InputList<string>());
            set => _savedFilterTokens = value;
        }

        /// <summary>
        /// Title of the Cost Report
        /// </summary>
        [Input("title")]
        public Input<string>? Title { get; set; }

        /// <summary>
        /// Unique cost report identifier
        /// </summary>
        [Input("token")]
        public Input<string>? Token { get; set; }

        /// <summary>
        /// Workspace token to add the cost report to.
        /// </summary>
        [Input("workspaceToken")]
        public Input<string>? WorkspaceToken { get; set; }

        public CostReportState()
        {
        }
        public static new CostReportState Empty => new CostReportState();
    }
}
