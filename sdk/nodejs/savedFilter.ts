// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Manages a SavedFilter.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vantage from "@lbrlabs/pulumi-vantage";
 *
 * const demoFilter = new vantage.SavedFilter("demoFilter", {
 *     filter: "(costs.provider = 'aws')",
 *     title: "Demo Saved Filter",
 * });
 * ```
 */
export class SavedFilter extends pulumi.CustomResource {
    /**
     * Get an existing SavedFilter resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SavedFilterState, opts?: pulumi.CustomResourceOptions): SavedFilter {
        return new SavedFilter(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vantage:index/savedFilter:SavedFilter';

    /**
     * Returns true if the given object is an instance of SavedFilter.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SavedFilter {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SavedFilter.__pulumiType;
    }

    /**
     * VQL Query used for this saved filter.
     */
    public readonly filter!: pulumi.Output<string>;
    /**
     * Title of the Saved Filter
     */
    public readonly title!: pulumi.Output<string>;
    /**
     * Unique saved filter identifier
     */
    public /*out*/ readonly token!: pulumi.Output<string>;
    /**
     * Workspace token to add the saved filter into.
     */
    public readonly workspaceToken!: pulumi.Output<string>;

    /**
     * Create a SavedFilter resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SavedFilterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SavedFilterArgs | SavedFilterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SavedFilterState | undefined;
            resourceInputs["filter"] = state ? state.filter : undefined;
            resourceInputs["title"] = state ? state.title : undefined;
            resourceInputs["token"] = state ? state.token : undefined;
            resourceInputs["workspaceToken"] = state ? state.workspaceToken : undefined;
        } else {
            const args = argsOrState as SavedFilterArgs | undefined;
            if ((!args || args.title === undefined) && !opts.urn) {
                throw new Error("Missing required property 'title'");
            }
            resourceInputs["filter"] = args ? args.filter : undefined;
            resourceInputs["title"] = args ? args.title : undefined;
            resourceInputs["workspaceToken"] = args ? args.workspaceToken : undefined;
            resourceInputs["token"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SavedFilter.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SavedFilter resources.
 */
export interface SavedFilterState {
    /**
     * VQL Query used for this saved filter.
     */
    filter?: pulumi.Input<string>;
    /**
     * Title of the Saved Filter
     */
    title?: pulumi.Input<string>;
    /**
     * Unique saved filter identifier
     */
    token?: pulumi.Input<string>;
    /**
     * Workspace token to add the saved filter into.
     */
    workspaceToken?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SavedFilter resource.
 */
export interface SavedFilterArgs {
    /**
     * VQL Query used for this saved filter.
     */
    filter?: pulumi.Input<string>;
    /**
     * Title of the Saved Filter
     */
    title: pulumi.Input<string>;
    /**
     * Workspace token to add the saved filter into.
     */
    workspaceToken?: pulumi.Input<string>;
}
