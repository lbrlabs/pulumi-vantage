// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vantage;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SegmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final SegmentArgs Empty = new SegmentArgs();

    /**
     * The description of the Segment.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the Segment.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The filter query language to apply to the Segment. Additional documentation available at https://docs.vantage.sh/vql.
     * 
     */
    @Import(name="filter")
    private @Nullable Output<String> filter;

    /**
     * @return The filter query language to apply to the Segment. Additional documentation available at https://docs.vantage.sh/vql.
     * 
     */
    public Optional<Output<String>> filter() {
        return Optional.ofNullable(this.filter);
    }

    /**
     * The token of the parent Segment this new Segment belongs to. Determines the Workspace the segment is assigned to.
     * 
     */
    @Import(name="parentSegmentToken")
    private @Nullable Output<String> parentSegmentToken;

    /**
     * @return The token of the parent Segment this new Segment belongs to. Determines the Workspace the segment is assigned to.
     * 
     */
    public Optional<Output<String>> parentSegmentToken() {
        return Optional.ofNullable(this.parentSegmentToken);
    }

    /**
     * The priority of the Segment.
     * 
     */
    @Import(name="priority")
    private @Nullable Output<Integer> priority;

    /**
     * @return The priority of the Segment.
     * 
     */
    public Optional<Output<Integer>> priority() {
        return Optional.ofNullable(this.priority);
    }

    /**
     * The title of the Segment.
     * 
     */
    @Import(name="title", required=true)
    private Output<String> title;

    /**
     * @return The title of the Segment.
     * 
     */
    public Output<String> title() {
        return this.title;
    }

    /**
     * Whether or not to track unallocated resources in this Segment.
     * 
     */
    @Import(name="trackUnallocated")
    private @Nullable Output<Boolean> trackUnallocated;

    /**
     * @return Whether or not to track unallocated resources in this Segment.
     * 
     */
    public Optional<Output<Boolean>> trackUnallocated() {
        return Optional.ofNullable(this.trackUnallocated);
    }

    /**
     * Workspace token to add the segment to.
     * 
     */
    @Import(name="workspaceToken")
    private @Nullable Output<String> workspaceToken;

    /**
     * @return Workspace token to add the segment to.
     * 
     */
    public Optional<Output<String>> workspaceToken() {
        return Optional.ofNullable(this.workspaceToken);
    }

    private SegmentArgs() {}

    private SegmentArgs(SegmentArgs $) {
        this.description = $.description;
        this.filter = $.filter;
        this.parentSegmentToken = $.parentSegmentToken;
        this.priority = $.priority;
        this.title = $.title;
        this.trackUnallocated = $.trackUnallocated;
        this.workspaceToken = $.workspaceToken;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SegmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SegmentArgs $;

        public Builder() {
            $ = new SegmentArgs();
        }

        public Builder(SegmentArgs defaults) {
            $ = new SegmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The description of the Segment.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the Segment.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param filter The filter query language to apply to the Segment. Additional documentation available at https://docs.vantage.sh/vql.
         * 
         * @return builder
         * 
         */
        public Builder filter(@Nullable Output<String> filter) {
            $.filter = filter;
            return this;
        }

        /**
         * @param filter The filter query language to apply to the Segment. Additional documentation available at https://docs.vantage.sh/vql.
         * 
         * @return builder
         * 
         */
        public Builder filter(String filter) {
            return filter(Output.of(filter));
        }

        /**
         * @param parentSegmentToken The token of the parent Segment this new Segment belongs to. Determines the Workspace the segment is assigned to.
         * 
         * @return builder
         * 
         */
        public Builder parentSegmentToken(@Nullable Output<String> parentSegmentToken) {
            $.parentSegmentToken = parentSegmentToken;
            return this;
        }

        /**
         * @param parentSegmentToken The token of the parent Segment this new Segment belongs to. Determines the Workspace the segment is assigned to.
         * 
         * @return builder
         * 
         */
        public Builder parentSegmentToken(String parentSegmentToken) {
            return parentSegmentToken(Output.of(parentSegmentToken));
        }

        /**
         * @param priority The priority of the Segment.
         * 
         * @return builder
         * 
         */
        public Builder priority(@Nullable Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority The priority of the Segment.
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param title The title of the Segment.
         * 
         * @return builder
         * 
         */
        public Builder title(Output<String> title) {
            $.title = title;
            return this;
        }

        /**
         * @param title The title of the Segment.
         * 
         * @return builder
         * 
         */
        public Builder title(String title) {
            return title(Output.of(title));
        }

        /**
         * @param trackUnallocated Whether or not to track unallocated resources in this Segment.
         * 
         * @return builder
         * 
         */
        public Builder trackUnallocated(@Nullable Output<Boolean> trackUnallocated) {
            $.trackUnallocated = trackUnallocated;
            return this;
        }

        /**
         * @param trackUnallocated Whether or not to track unallocated resources in this Segment.
         * 
         * @return builder
         * 
         */
        public Builder trackUnallocated(Boolean trackUnallocated) {
            return trackUnallocated(Output.of(trackUnallocated));
        }

        /**
         * @param workspaceToken Workspace token to add the segment to.
         * 
         * @return builder
         * 
         */
        public Builder workspaceToken(@Nullable Output<String> workspaceToken) {
            $.workspaceToken = workspaceToken;
            return this;
        }

        /**
         * @param workspaceToken Workspace token to add the segment to.
         * 
         * @return builder
         * 
         */
        public Builder workspaceToken(String workspaceToken) {
            return workspaceToken(Output.of(workspaceToken));
        }

        public SegmentArgs build() {
            $.title = Objects.requireNonNull($.title, "expected parameter 'title' to be non-null");
            return $;
        }
    }

}
