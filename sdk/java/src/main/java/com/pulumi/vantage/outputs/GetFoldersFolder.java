// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vantage.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetFoldersFolder {
    private String parentFolderToken;
    private List<String> savedFilterTokens;
    private String title;
    private String token;
    private String workspaceToken;

    private GetFoldersFolder() {}
    public String parentFolderToken() {
        return this.parentFolderToken;
    }
    public List<String> savedFilterTokens() {
        return this.savedFilterTokens;
    }
    public String title() {
        return this.title;
    }
    public String token() {
        return this.token;
    }
    public String workspaceToken() {
        return this.workspaceToken;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFoldersFolder defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String parentFolderToken;
        private List<String> savedFilterTokens;
        private String title;
        private String token;
        private String workspaceToken;
        public Builder() {}
        public Builder(GetFoldersFolder defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.parentFolderToken = defaults.parentFolderToken;
    	      this.savedFilterTokens = defaults.savedFilterTokens;
    	      this.title = defaults.title;
    	      this.token = defaults.token;
    	      this.workspaceToken = defaults.workspaceToken;
        }

        @CustomType.Setter
        public Builder parentFolderToken(String parentFolderToken) {
            this.parentFolderToken = Objects.requireNonNull(parentFolderToken);
            return this;
        }
        @CustomType.Setter
        public Builder savedFilterTokens(List<String> savedFilterTokens) {
            this.savedFilterTokens = Objects.requireNonNull(savedFilterTokens);
            return this;
        }
        public Builder savedFilterTokens(String... savedFilterTokens) {
            return savedFilterTokens(List.of(savedFilterTokens));
        }
        @CustomType.Setter
        public Builder title(String title) {
            this.title = Objects.requireNonNull(title);
            return this;
        }
        @CustomType.Setter
        public Builder token(String token) {
            this.token = Objects.requireNonNull(token);
            return this;
        }
        @CustomType.Setter
        public Builder workspaceToken(String workspaceToken) {
            this.workspaceToken = Objects.requireNonNull(workspaceToken);
            return this;
        }
        public GetFoldersFolder build() {
            final var o = new GetFoldersFolder();
            o.parentFolderToken = parentFolderToken;
            o.savedFilterTokens = savedFilterTokens;
            o.title = title;
            o.token = token;
            o.workspaceToken = workspaceToken;
            return o;
        }
    }
}
