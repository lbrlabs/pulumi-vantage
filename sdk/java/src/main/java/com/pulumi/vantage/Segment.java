// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vantage;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.vantage.SegmentArgs;
import com.pulumi.vantage.Utilities;
import com.pulumi.vantage.inputs.SegmentState;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Segment.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.vantage.Segment;
 * import com.pulumi.vantage.SegmentArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var demoSegment = new Segment(&#34;demoSegment&#34;, SegmentArgs.builder()        
 *             .description(&#34;This is still a demo segment&#34;)
 *             .filter(&#34;(costs.provider = &#39;aws&#39; AND tags.name = NULL)&#34;)
 *             .priority(50)
 *             .title(&#34;Demo Segment&#34;)
 *             .trackUnallocated(false)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 */
@ResourceType(type="vantage:index/segment:Segment")
public class Segment extends com.pulumi.resources.CustomResource {
    /**
     * The description of the Segment.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the Segment.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The filter query language to apply to the Segment. Additional documentation available at https://docs.vantage.sh/vql.
     * 
     */
    @Export(name="filter", type=String.class, parameters={})
    private Output<String> filter;

    /**
     * @return The filter query language to apply to the Segment. Additional documentation available at https://docs.vantage.sh/vql.
     * 
     */
    public Output<String> filter() {
        return this.filter;
    }
    /**
     * The token of the parent Segment this new Segment belongs to. Determines the Workspace the segment is assigned to.
     * 
     */
    @Export(name="parentSegmentToken", type=String.class, parameters={})
    private Output<String> parentSegmentToken;

    /**
     * @return The token of the parent Segment this new Segment belongs to. Determines the Workspace the segment is assigned to.
     * 
     */
    public Output<String> parentSegmentToken() {
        return this.parentSegmentToken;
    }
    /**
     * The priority of the Segment.
     * 
     */
    @Export(name="priority", type=Integer.class, parameters={})
    private Output<Integer> priority;

    /**
     * @return The priority of the Segment.
     * 
     */
    public Output<Integer> priority() {
        return this.priority;
    }
    /**
     * The title of the Segment.
     * 
     */
    @Export(name="title", type=String.class, parameters={})
    private Output<String> title;

    /**
     * @return The title of the Segment.
     * 
     */
    public Output<String> title() {
        return this.title;
    }
    /**
     * Unique segment identifier
     * 
     */
    @Export(name="token", type=String.class, parameters={})
    private Output<String> token;

    /**
     * @return Unique segment identifier
     * 
     */
    public Output<String> token() {
        return this.token;
    }
    /**
     * Whether or not to track unallocated resources in this Segment.
     * 
     */
    @Export(name="trackUnallocated", type=Boolean.class, parameters={})
    private Output<Boolean> trackUnallocated;

    /**
     * @return Whether or not to track unallocated resources in this Segment.
     * 
     */
    public Output<Boolean> trackUnallocated() {
        return this.trackUnallocated;
    }
    /**
     * Workspace token to add the segment to.
     * 
     */
    @Export(name="workspaceToken", type=String.class, parameters={})
    private Output<String> workspaceToken;

    /**
     * @return Workspace token to add the segment to.
     * 
     */
    public Output<String> workspaceToken() {
        return this.workspaceToken;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Segment(String name) {
        this(name, SegmentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Segment(String name, SegmentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Segment(String name, SegmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vantage:index/segment:Segment", name, args == null ? SegmentArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Segment(String name, Output<String> id, @Nullable SegmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vantage:index/segment:Segment", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Segment get(String name, Output<String> id, @Nullable SegmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Segment(name, id, state, options);
    }
}
