// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.vantage;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SavedFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final SavedFilterArgs Empty = new SavedFilterArgs();

    /**
     * VQL Query used for this saved filter.
     * 
     */
    @Import(name="filter")
    private @Nullable Output<String> filter;

    /**
     * @return VQL Query used for this saved filter.
     * 
     */
    public Optional<Output<String>> filter() {
        return Optional.ofNullable(this.filter);
    }

    /**
     * Title of the Saved Filter
     * 
     */
    @Import(name="title", required=true)
    private Output<String> title;

    /**
     * @return Title of the Saved Filter
     * 
     */
    public Output<String> title() {
        return this.title;
    }

    /**
     * Workspace token to add the saved filter into.
     * 
     */
    @Import(name="workspaceToken")
    private @Nullable Output<String> workspaceToken;

    /**
     * @return Workspace token to add the saved filter into.
     * 
     */
    public Optional<Output<String>> workspaceToken() {
        return Optional.ofNullable(this.workspaceToken);
    }

    private SavedFilterArgs() {}

    private SavedFilterArgs(SavedFilterArgs $) {
        this.filter = $.filter;
        this.title = $.title;
        this.workspaceToken = $.workspaceToken;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SavedFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SavedFilterArgs $;

        public Builder() {
            $ = new SavedFilterArgs();
        }

        public Builder(SavedFilterArgs defaults) {
            $ = new SavedFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filter VQL Query used for this saved filter.
         * 
         * @return builder
         * 
         */
        public Builder filter(@Nullable Output<String> filter) {
            $.filter = filter;
            return this;
        }

        /**
         * @param filter VQL Query used for this saved filter.
         * 
         * @return builder
         * 
         */
        public Builder filter(String filter) {
            return filter(Output.of(filter));
        }

        /**
         * @param title Title of the Saved Filter
         * 
         * @return builder
         * 
         */
        public Builder title(Output<String> title) {
            $.title = title;
            return this;
        }

        /**
         * @param title Title of the Saved Filter
         * 
         * @return builder
         * 
         */
        public Builder title(String title) {
            return title(Output.of(title));
        }

        /**
         * @param workspaceToken Workspace token to add the saved filter into.
         * 
         * @return builder
         * 
         */
        public Builder workspaceToken(@Nullable Output<String> workspaceToken) {
            $.workspaceToken = workspaceToken;
            return this;
        }

        /**
         * @param workspaceToken Workspace token to add the saved filter into.
         * 
         * @return builder
         * 
         */
        public Builder workspaceToken(String workspaceToken) {
            return workspaceToken(Output.of(workspaceToken));
        }

        public SavedFilterArgs build() {
            $.title = Objects.requireNonNull($.title, "expected parameter 'title' to be non-null");
            return $;
        }
    }

}
